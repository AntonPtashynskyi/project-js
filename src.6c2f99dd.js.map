{"version":3,"sources":["javascript/APIservise.js","javascript/fetch.js","index.js"],"names":["API_KEY","BASE_URL","apiService","constructor","searchQuery","pageNum","fetchPopularMovies","url","fetch","then","result","json","fetchSearchMovies","fetchGenres","r","data","genres","query","newQuery","page","thid","newPageNum","resetPage","searchForm","document","querySelector","header","movieApiService","getSearchMovies","e","preventDefault","searchValue","currentTarget","elements","value","trim","addErrorMessage","setTimeout","removeErrorMessage","movies","results","length","addMoviesCollectionToLocalStorage","error","console","log","getPopularMovies","localStorage","removeItem","setItem","JSON","stringify","insertAdjacentHTML","reset","remove","moviesArray","addEventListener"],"mappings":";;;AAgDC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhDD,MAAMA,EAAU,mCACVC,EAAW,gCAEF,MAAMC,EAEjBC,cACSC,KAAAA,YAAc,GACdC,KAAAA,QAAU,EAGnBC,qBACUC,MAAAA,KAASN,+BAAsCD,UAAgB,KAAKK,UACnEG,OAAAA,MAAMD,GAAKE,KAAKC,GAAWA,EAAOC,QAG7CC,oBACUL,MAAAA,KAASN,yBAAgCD,0BAAgC,KAAKI,oBAAoB,KAAKC,8BACtGG,OAAAA,MAAMD,GAAKE,KAAKC,GAAUA,EAAOC,QAI5CE,cAEWL,OAAAA,SADQP,6BAAoCD,oBACjCS,KAAKK,GAAKA,EAAEH,QAAQF,KAAKM,GAAiBA,EAAKC,QAIjEC,YACO,OAAA,KAAKb,YAGZa,UAAMC,GACDd,KAAAA,YAAcc,EAKnBC,WACOC,OAAAA,KAAKf,QAGZc,SAAKE,GACAhB,KAAAA,QAAUgB,EAGnBC,YACSjB,KAAAA,QAAU,GAEtB,QAAA,QAAA;;ACiCA,aAjFD,IAAA,EAAA,EAAA,QAAA,iBAiFC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhFD,MAAMkB,EAAaC,SAASC,cAAc,iBACpCC,EAASF,SAASC,cAAc,UAGhCE,EAAkB,IAAIzB,EAAJ,QAQxB,eAAe0B,EAAgBC,GAC7BA,EAAEC,iBAEIC,MAAAA,EAAcF,EAAEG,cAAcC,SAAShB,MAAMiB,MAAMC,OAMrDJ,GALJJ,EAAgBV,MAAQc,EAExBJ,EAAgBL,YAGI,KAAhBS,EAGF,OAFAK,SACAC,WAAWC,EAAoB,KAI3B,IACIC,MAAAA,QAAeZ,EAAgBf,oBAEjC2B,GAA0B,IAA1BA,EAAOC,QAAQC,OAGjB,OAFAL,SACAC,WAAWC,EAAoB,KAIjCI,EAAkCH,GAEpC,MAAOI,GAAQC,QAAQC,IAAIF,IAM/B,eAAeG,EAAiBjB,GAE9BF,EAAgBL,YAGhByB,aAAaC,WAAW,UAClB,IACIT,MAAAA,QAAeZ,EAAgBrB,qBAC/BU,QAAeW,EAAgBd,cAErCkC,aAAaE,QAAQ,SAAUC,KAAKC,UAAUnC,IAC9C0B,EAAkCH,GAGpC,MAAOI,GAAQC,QAAQC,IAAIF,IAK/B,SAASP,IACOZ,SAASC,cAAc,sBAErCC,EAAO0B,mBAAmB,YAAc,8FAG1C,SAASd,IACDK,MAAAA,EAAQnB,SAASC,cAAc,qBACrCF,EAAW8B,QACXV,EAAMW,SAKR,SAASZ,EAAkCa,GACzCR,aAAaC,WAAW,oBACxBD,aAAaE,QAAQ,mBAAoBC,KAAKC,UAAUI,IAzE1DT,IAEAvB,EAAWiC,iBAAiB,SAAU5B;;ACNtC,aAHA,QAAA,oBAEA,QAAA,uBACA,QAAA","file":"src.6c2f99dd.js","sourceRoot":"../src","sourcesContent":["const API_KEY = '38db6117f0864942bf1538520c27c195';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport default class apiService { \n\n    constructor() {\n        this.searchQuery = '';\n        this.pageNum = 1;\n     }\n\n    fetchPopularMovies() {\n        const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${this.pageNum}`;\n        return fetch(url).then(result =>  result.json())\n    }\n\n    fetchSearchMovies() {\n        const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.pageNum}&include_adult=false`;\n        return fetch(url).then(result => result.json());   \n    }\n\n\n    fetchGenres() { \n        const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\n        return fetch(url).then(r => r.json()).then(data => { return data.genres });\n    }\n\n\n    get query() {\n        return this.searchQuery;\n    }\n\n    set query(newQuery) { \n        this.searchQuery = newQuery;\n    }\n\n\n\n    get page() { \n        return thid.pageNum;\n    }\n\n    set page(newPageNum) {\n        this.pageNum = newPageNum;\n    }\n    \n    resetPage() { \n        this.pageNum = 1;\n    }\n};","import apiService from \"./APIservise\";  //Імпорт класу APIservise\nconst searchForm = document.querySelector('.main-form_js');\nconst header = document.querySelector('header');\n\n\nconst movieApiService = new apiService();// Новий екземпляр класу\n\ngetPopularMovies(); // Завантажує популярні фільми, при відкритті сайту\n\nsearchForm.addEventListener('submit', getSearchMovies);\n\n\n\nasync function getSearchMovies(e) { \n  e.preventDefault();\n \n  const searchValue = e.currentTarget.elements.query.value.trim();\n  movieApiService.query = searchValue;\n  \n  movieApiService.resetPage();\n  //movieApiService.page = ; Додати посилання на зміну номерації сторінок!!!!\n\n  if (searchValue === '') {//якщо натиснули \"пошук\" з пустим інпутом\n    addErrorMessage();\n    setTimeout(removeErrorMessage, 2000);\n    return\n  }\n  \n    try {\n      const movies = await movieApiService.fetchSearchMovies(); //Зверення до масиву об'єктів: \"movies.results\"\n\n      if (movies.results.length === 0) { //якщо прийшов пустий масив або був введений некоректний запит\n        addErrorMessage();\n        setTimeout(removeErrorMessage, 2000);\n        return\n      };\n\n      addMoviesCollectionToLocalStorage(movies);\n\n  } catch (error) {console.log(error) };\n\n};\n\n\n\nasync function getPopularMovies(e) { \n  \n  movieApiService.resetPage();\n  //movieApiService.page = ;  Додати посилання на зміну номерації сторінок!!!!\n \n  localStorage.removeItem(\"genres\"); // Видаляє список жанрів при першому завантаженні із localstorage, ключ 'genres'; \n    try {\n      const movies = await movieApiService.fetchPopularMovies();//Зверення до масиву об'єктів: \"movies.results\"\n      const genres = await movieApiService.fetchGenres(); \n\n      localStorage.setItem(\"genres\", JSON.stringify(genres));// Додає список жанрів при першому завантаженні до localstorage\n      addMoviesCollectionToLocalStorage(movies);\n      \n\n  } catch (error) {console.log(error) };\n  \n};\n\n\nfunction addErrorMessage() { // Виводить error message\n  const error = document.querySelector('.error-message_js');\n  if (error) { return}\n  header.insertAdjacentHTML(\"beforeend\", `<p class=\"error-message_js\">Search result not successful. Enter the correct movie name</p>`);\n };\n\nfunction removeErrorMessage() { // Очищає поле вводу та прибирає error message\n  const error = document.querySelector('.error-message_js')\n  searchForm.reset();\n  error.remove();\n};\n\n\n//Додає колекцію фільмів до local Storage, ключ: 'MoviesCollection'.\nfunction addMoviesCollectionToLocalStorage(moviesArray) { \n  localStorage.removeItem(\"MoviesCollection\");\n  localStorage.setItem(\"MoviesCollection\", JSON.stringify(moviesArray));\n};","import './sass/main.scss';\n\nimport './javascript/README'; // Так подключаем модули JS файлов.\nimport './javascript/fetch';"]}